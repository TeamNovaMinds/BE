plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'novaminds'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// API 문서화
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// QueryDSL 메인 모듈들 (최신 5.1.0 버전)
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-jpa:5.1.0:jakarta"  // Jakarta용 클래스패스

	// QueryDSL Annotation Processor (Jakarta JPA용으로 설정)
	annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"

	// Jakarta EE API 의존성 (컴파일 및 런타임에 필요)
	implementation "jakarta.persistence:jakarta.persistence-api"
	implementation "jakarta.annotation:jakarta.annotation-api"
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDsl 추가 설정
def generated = 'src/main/generated'
sourceSets {
	main {
		java {
			srcDirs += generated
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = file(generated)
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

